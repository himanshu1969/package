[root@himanshu ~]# 
[root@himanshu ~]# 
[root@himanshu ~]# 








[root@himanshu ~]# 














[root@himanshu ~]# 









[root@himanshu ~]# 





















[root@himanshu ~]# nmcli c
NAME    UUID                                  TYPE            DEVICE 
server  19071f58-dac1-4aaa-a4b8-6c719fc55c61  802-3-ethernet  ens33  
virbr0  2063188f-f065-4e99-a6f4-66b72ed22bb3  bridge          virbr0 
[root@himanshu ~]# ifconfig ens33
ens33: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.43.99  netmask 255.255.255.0  broadcast 192.168.43.255
        inet6 fe80::2a4c:1c67:4996:ab40  prefixlen 64  scopeid 0x20<link>
        inet6 2402:3a80:d51:66d:c195:d54f:16b9:242c  prefixlen 64  scopeid 0x0<global>
        ether 00:0c:29:65:98:bc  txqueuelen 1000  (Ethernet)
        RX packets 2355  bytes 313980 (306.6 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 3033  bytes 2990584 (2.8 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

[root@himanshu ~]# 











[root@himanshu ~]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
^C
--- 8.8.8.8 ping statistics ---
2 packets transmitted, 0 received, 100% packet loss, time 1004ms

[root@himanshu ~]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
^C
--- 8.8.8.8 ping statistics ---
1 packets transmitted, 0 received, 100% packet loss, time 0ms

[root@himanshu ~]# 














[root@himanshu ~]# nmcli connection down server 
Connection 'server' successfully deactivated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/7)
[root@himanshu ~]# nmcli connection up server 
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/8)
[root@himanshu ~]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=54 time=135 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=54 time=56.1 ms
^C
--- 8.8.8.8 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 56.155/95.751/135.348/39.597 ms
[root@himanshu ~]# 













[root@himanshu ~]# cd ansible/
[root@himanshu ansible]# 

























[root@himanshu ansible]# ls
1  ansible.cfg  hosts  playbook.yml
[root@himanshu ansible]# vim hosts 
[root@himanshu ansible]# cd
[root@himanshu ~]# 






















[root@himanshu ~]# 





















[root@himanshu ~]# 





















[root@himanshu ~]# vim /etc/ansible/hosts 
[root@himanshu ~]# cd ansible/
[root@himanshu ansible]# 



















[root@himanshu ansible]# vim ansible.cfg 
[root@himanshu ansible]# 




















[root@himanshu ansible]# ls
1  ansible.cfg  hosts  playbook.yml
[root@himanshu ansible]# cd
[root@himanshu ~]# cd ansible/
[root@himanshu ansible]# 

















[root@himanshu ansible]# 





















[root@himanshu ansible]# vim hosts 
[root@himanshu ansible]# ansible -m ping webserver
192.168.43.46 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.43.46 port 22: Connection refused", 
    "unreachable": true
}
[root@himanshu ansible]# ping 192.168.43.46
PING 192.168.43.46 (192.168.43.46) 56(84) bytes of data.
64 bytes from 192.168.43.46: icmp_seq=1 ttl=64 time=14.3 ms
^C
--- 192.168.43.46 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 14.398/14.398/14.398/0.000 ms
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ping 192.168.43.46
PING 192.168.43.46 (192.168.43.46) 56(84) bytes of data.
64 bytes from 192.168.43.46: icmp_seq=1 ttl=64 time=11.6 ms
64 bytes from 192.168.43.46: icmp_seq=2 ttl=64 time=55.2 ms
^C
--- 192.168.43.46 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 11.689/33.477/55.265/21.788 ms
[root@himanshu ansible]# ssh root@192.168.43.46
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=54 time=55.6 ms
^C
--- 8.8.8.8 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 55.634/55.634/55.634/0.000 ms
[root@himanshu ansible]# 




[root@himanshu ansible]# ping 192.168.43.46
PING 192.168.43.46 (192.168.43.46) 56(84) bytes of data.
64 bytes from 192.168.43.46: icmp_seq=1 ttl=64 time=8.98 ms
^C
--- 192.168.43.46 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 8.984/8.984/8.984/0.000 ms
[root@himanshu ansible]# ssh root@ 192.168.43.46














[root@himanshu ansible]# ssh root@ 192.168.43.46
ssh: Could not resolve hostname : Name or service not known
[root@himanshu ansible]# ssh root@192.168.43.46



















[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ifconfig ens33
ens33: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.43.99  netmask 255.255.255.0  broadcast 192.168.43.255
        inet6 2401:4900:1702:540e:2f5b:17f6:d9ea:2fe7  prefixlen 64  scopeid 0x0<global>
        inet6 fe80::2a4c:1c67:4996:ab40  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:65:98:bc  txqueuelen 1000  (Ethernet)
        RX packets 2504  bytes 333247 (325.4 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 3110  bytes 2999648 (2.8 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

[root@himanshu ansible]# ssh root@192.168.43.46
ssh: connect to host 192.168.43.46 port 22: Connection refused
[root@himanshu ansible]# ssh root@192.168.43.46
The authenticity of host '192.168.43.46 (192.168.43.46)' can't be established.
ECDSA key fingerprint is SHA256:gUbdd1dnIDltQId6JUQ/KyqbZK/bX1xTlVw630pwzwg.
ECDSA key fingerprint is MD5:82:69:dc:67:71:81:a2:2a:8e:85:e4:ff:3c:58:18:94.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.43.46' (ECDSA) to the list of known hosts.
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@himanshu ansible]# ssh-copy-id root@192.168.43.46
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@himanshu ansible]# cd
[root@himanshu ~]# 
[root@himanshu ~]# cd .ssh
[root@himanshu .ssh]# ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
[root@himanshu .ssh]# rm -rf *
[root@himanshu .ssh]# 

















[root@himanshu .ssh]# cd
[root@himanshu ~]# 




















[root@himanshu ~]# ssh root@192.168.43.46
The authenticity of host '192.168.43.46 (192.168.43.46)' can't be established.
ECDSA key fingerprint is SHA256:gUbdd1dnIDltQId6JUQ/KyqbZK/bX1xTlVw630pwzwg.
ECDSA key fingerprint is MD5:82:69:dc:67:71:81:a2:2a:8e:85:e4:ff:3c:58:18:94.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.43.46' (ECDSA) to the list of known hosts.
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@himanshu ~]# cd .ssh
[root@himanshu .ssh]# 













[root@himanshu .ssh]# ls
known_hosts
[root@himanshu .ssh]# rm -rf *
[root@himanshu .ssh]# cd
[root@himanshu ~]# 

















[root@himanshu ~]# cd .ssh
[root@himanshu .ssh]# ls
[root@himanshu .ssh]# cd
[root@himanshu ~]# 


















[root@himanshu ~]# cd /etc/ssh
[root@himanshu ssh]# 




















[root@himanshu ssh]# ls
moduli       ssh_host_ecdsa_key      ssh_host_ed25519_key.pub
ssh_config   ssh_host_ecdsa_key.pub  ssh_host_rsa_key
sshd_config  ssh_host_ed25519_key    ssh_host_rsa_key.pub
[root@himanshu ssh]# cd
[root@himanshu ~]# 
















[root@himanshu ~]# cd .ssh
[root@himanshu .ssh]# ls
[root@himanshu .ssh]# cd
[root@himanshu ~]# 


















[root@himanshu ~]# ssh root@192.168.43.46
ssh_exchange_identification: read: Connection reset by peer
[root@himanshu ~]# 



















[root@himanshu ~]# ssh root@192.168.43.46
The authenticity of host '192.168.43.46 (192.168.43.46)' can't be established.
ECDSA key fingerprint is SHA256:FsUrwuR9Y2btYXrUMqwz3tODTJzPB2JTIQhjs4MBLIQ.
ECDSA key fingerprint is MD5:c4:95:61:49:cc:05:0a:61:73:4e:03:b8:a7:d1:82:f8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.43.46' (ECDSA) to the list of known hosts.
root@192.168.43.46's password: 
Last login: Thu Jun 27 16:50:00 2019
[root@garima ~]# logout
Connection to 192.168.43.46 closed.
[root@himanshu ~]# ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:M3aEL8FA5e9/5QujVH9ai9EIkpDEWn9uxYXp9Q1+7kE root@himanshu
The key's randomart image is:
+---[RSA 2048]----+
|     .+o.     o  |
|      .*..   o.o |
|      oo* . o.o.o|
|     .  .*.. +.E+|
|        So*....o |
|       . *.oo +.o|
|          o. = *+|
|          ... *o=|
|           ..o.o.|
+----[SHA256]-----+
[root@himanshu ~]# ssh-copy-id root@192.168.43.46
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@192.168.43.46's password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'root@192.168.43.46'"
and check to make sure that only the key(s) you wanted were added.

[root@himanshu ~]# ssh root@192.168.43.46
Last login: Thu Jun 27 17:45:22 2019 from himanshu-98bc
[root@garima ~]# logout
Connection to 192.168.43.46 closed.
[root@himanshu ~]# 
[root@himanshu ~]# cd ansible/
[root@himanshu ansible]# 




















[root@himanshu ansible]# ansible -m ping all
192.168.43.46 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    }, 
    "changed": false, 
    "ping": "pong"
}
[root@himanshu ansible]# ls
1  ansible.cfg  hosts  playbook.yml
[root@himanshu ansible]# cat ansible.cfg 
[defaults]
inventory=./hosts
#ask_pass=true

[root@himanshu ansible]# cat hosts
[webserver]
192.168.43.46

[root@himanshu ansible]# 


[root@himanshu ansible]# ls
1  ansible.cfg  hosts  playbook.yml
[root@himanshu ansible]# vim playbook.yml
[root@himanshu ansible]# head -4 playbook.yml > yum.yml
[root@himanshu ansible]# cat yum.yml 
---
  - hosts: webserver
    tasks:
      - name: install the package of apache
[root@himanshu ansible]# 












[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml 















[root@himanshu ansible]# ansible-playbook yum.yml -C

PLAY [webserver] *********************************************************************

TASK [Gathering Facts] ***************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] ***************************************
changed: [192.168.43.46]

PLAY RECAP ***************************************************************************
192.168.43.46              : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml -C
[root@himanshu ansible]# ansible-playbook yum.yml -C

PLAY [webserver] *********************************************************************

TASK [Gathering Facts] ***************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] ***************************************
changed: [192.168.43.46]

TASK [Mount DVD read-only] ***********************************************************
changed: [192.168.43.46]

PLAY RECAP ***************************************************************************
192.168.43.46              : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 



[root@himanshu ansible]# vim yum.yml 




















[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml -C

PLAY [webserver] *********************************************************************

TASK [Gathering Facts] ***************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] ***************************************
changed: [192.168.43.46]

TASK [Mount DVD read-only] ***********************************************************
changed: [192.168.43.46]

PLAY RECAP ***************************************************************************
192.168.43.46              : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml -C

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] **********************************************************
changed: [192.168.43.46]

TASK [Mount DVD read-only] ******************************************************************************
changed: [192.168.43.46]

TASK [return motd to registered var] ********************************************************************
skipping: [192.168.43.46]

TASK [Touch a file, using symbolic modes to set the permissions (equivalent to 0644)] *******************
ok: [192.168.43.46]

TASK [Enter the details into a file] ********************************************************************
fatal: [192.168.43.46]: FAILED! => {"changed": false, "msg": "Destination /etc/yum.repos.d/rhel.repo does not exist !", "rc": 257}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=4    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml
[root@himanshu ansible]# ansible-playbook yum.yml

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] **********************************************************
changed: [192.168.43.46]

TASK [Mount DVD read-only] ******************************************************************************
changed: [192.168.43.46]

TASK [return motd to registered var] ********************************************************************
 [WARNING]: Consider using the mount module rather than running 'mount'.  If you need to use command
because mount is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

changed: [192.168.43.46]

TASK [Touch a file, using symbolic modes to set the permissions (equivalent to 0644)] *******************
changed: [192.168.43.46]

TASK [Enter the details into a file] ********************************************************************
changed: [192.168.43.46]

TASK [run a command] ************************************************************************************
 [WARNING]: Consider using the yum module rather than running 'yum'.  If you need to use command because
yum is insufficient you can add 'warn: false' to this command task or set 'command_warnings=False' in
ansible.cfg to get rid of this message.

fatal: [192.168.43.46]: FAILED! => {"changed": true, "cmd": ["yum", "repolist", "all"], "delta": "0:00:00.938133", "end": "2019-06-27 17:59:54.217565", "msg": "non-zero return code", "rc": 1, "start": "2019-06-27 17:59:53.279432", "stderr": "\n\nFile contains no section headers.\nfile: file:///etc/yum.repos.d/rhel.repo, line: 1\n'[rhel.repo]\\\\nbaseurl=file:///mnt/garima\\\\ngpgcheck=0\\n'", "stderr_lines": ["", "", "File contains no section headers.", "file: file:///etc/yum.repos.d/rhel.repo, line: 1", "'[rhel.repo]\\\\nbaseurl=file:///mnt/garima\\\\ngpgcheck=0\\n'"], "stdout": "Loaded plugins: langpacks, product-id, search-disabled-repos, subscription-\n              : manager\nThis system is not registered with an entitlement server. You can use subscription-manager to register.", "stdout_lines": ["Loaded plugins: langpacks, product-id, search-disabled-repos, subscription-", "              : manager", "This system is not registered with an entitlement server. You can use subscription-manager to register."]}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=6    changed=5    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml
[root@himanshu ansible]# ansible-playbook yum.yml

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] **********************************************************
fatal: [192.168.43.46]: FAILED! => {"changed": false, "module_stderr": "Shared connection to 192.168.43.46 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663852.23-227664936870927/AnsiballZ_file.py\", line 114, in <module>\r\n    _ansiballz_main()\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663852.23-227664936870927/AnsiballZ_file.py\", line 106, in _ansiballz_main\r\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663852.23-227664936870927/AnsiballZ_file.py\", line 49, in invoke_module\r\n    imp.load_module('__main__', mod, module, MOD_DESC)\r\n  File \"/tmp/ansible_file_payload_y3OsL_/__main__.py\", line 921, in <module>\r\n  File \"/tmp/ansible_file_payload_y3OsL_/__main__.py\", line 907, in main\r\n  File \"/tmp/ansible_file_payload_y3OsL_/__main__.py\", line 626, in ensure_directory\r\n  File \"/tmp/ansible_file_payload_y3OsL_/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1339, in set_fs_attributes_if_different\r\n  File \"/tmp/ansible_file_payload_y3OsL_/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1106, in set_mode_if_different\r\nOSError: [Errno 30] Read-only file system: '/mnt/garima'\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 1}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# 
[root@himanshu ansible]# ansible-playbook yum.yml

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] **********************************************************
fatal: [192.168.43.46]: FAILED! => {"changed": false, "module_stderr": "Shared connection to 192.168.43.46 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663888.27-205906651135395/AnsiballZ_file.py\", line 114, in <module>\r\n    _ansiballz_main()\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663888.27-205906651135395/AnsiballZ_file.py\", line 106, in _ansiballz_main\r\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663888.27-205906651135395/AnsiballZ_file.py\", line 49, in invoke_module\r\n    imp.load_module('__main__', mod, module, MOD_DESC)\r\n  File \"/tmp/ansible_file_payload_OIgM3G/__main__.py\", line 921, in <module>\r\n  File \"/tmp/ansible_file_payload_OIgM3G/__main__.py\", line 907, in main\r\n  File \"/tmp/ansible_file_payload_OIgM3G/__main__.py\", line 626, in ensure_directory\r\n  File \"/tmp/ansible_file_payload_OIgM3G/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1339, in set_fs_attributes_if_different\r\n  File \"/tmp/ansible_file_payload_OIgM3G/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1106, in set_mode_if_different\r\nOSError: [Errno 30] Read-only file system: '/mnt/garima'\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 1}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# ping 192.168.43.46
PING 192.168.43.46 (192.168.43.46) 56(84) bytes of data.
64 bytes from 192.168.43.46: icmp_seq=1 ttl=64 time=11.2 ms
^C
--- 192.168.43.46 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 11.271/11.271/11.271/0.000 ms
[root@himanshu ansible]# ansible-playbook yum.yml
[root@himanshu ansible]# ansible-playbook -vv yum.yml
ansible-playbook 2.8.1
  config file = /root/ansible/ansible.cfg
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 2.7.5 (default, Aug  4 2017, 00:39:18) [GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]
Using /root/ansible/ansible.cfg as config file

PLAYBOOK: yum.yml ***************************************************************************************
1 plays in yum.yml

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
task path: /root/ansible/yum.yml:2
ok: [192.168.43.46] => {"ansible_facts": {"ansible_all_ipv4_addresses": ["192.168.122.1", "192.168.43.46"], "ansible_all_ipv6_addresses": ["2401:4900:1702:540e:5629:b0ee:5bff:f595", "fe80::768f:26ef:fa11:9418"], "ansible_apparmor": {"status": "disabled"}, "ansible_architecture": "x86_64", "ansible_bios_date": "05/19/2017", "ansible_bios_version": "6.00", "ansible_cmdline": {"BOOT_IMAGE": "/vmlinuz-3.10.0-862.el7.x86_64", "LANG": "en_IN.UTF-8", "crashkernel": "auto", "quiet": true, "rd.lvm.lv": "rhel/swap", "rhgb": true, "ro": true, "root": "/dev/mapper/rhel-root"}, "ansible_date_time": {"date": "2019-06-27", "day": "27", "epoch": "1561638749", "hour": "18", "iso8601": "2019-06-27T12:32:29Z", "iso8601_basic": "20190627T180229979498", "iso8601_basic_short": "20190627T180229", "iso8601_micro": "2019-06-27T12:32:29.979935Z", "minute": "02", "month": "06", "second": "29", "time": "18:02:29", "tz": "IST", "tz_offset": "+0530", "weekday": "Thursday", "weekday_number": "4", "weeknumber": "25", "year": "2019"}, "ansible_default_ipv4": {"address": "192.168.43.46", "alias": "ens33", "broadcast": "192.168.43.255", "gateway": "192.168.43.34", "interface": "ens33", "macaddress": "00:0c:29:46:18:33", "mtu": 1500, "netmask": "255.255.255.0", "network": "192.168.43.0", "type": "ether"}, "ansible_default_ipv6": {"address": "2401:4900:1702:540e:5629:b0ee:5bff:f595", "gateway": "fe80::66a2:f9ff:fed2:6db6", "interface": "ens33", "macaddress": "00:0c:29:46:18:33", "mtu": 1500, "prefix": "64", "scope": "global", "type": "ether"}, "ansible_device_links": {"ids": {"dm-0": ["dm-name-rhel-root", "dm-uuid-LVM-39rgFAhdd2akpJCsehjYx2Gaf5mjb3q2cKMMZHBbTMshhcvIrP5Gry7Xdef7mdNI"], "dm-1": ["dm-name-rhel-swap", "dm-uuid-LVM-39rgFAhdd2akpJCsehjYx2Gaf5mjb3q25iJqfWVOgRPaeqNEzGUIEToAgKjWUJhS"], "sda2": ["lvm-pv-uuid-aOrb8x-RY00-k5GZ-T1wg-QPtR-jvEb-QpKjun"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_01000000000000000001"]}, "labels": {"sr0": ["RHEL-7.5\\x20Server.x86_64"]}, "masters": {"sda2": ["dm-0", "dm-1"]}, "uuids": {"dm-0": ["b59d173e-d8c1-444a-abee-e5c139a56950"], "dm-1": ["4b1c130c-7856-437b-af0e-6e9c23ec73a0"], "sda1": ["cbd9e054-370a-4b90-aee7-0981ebfad616"], "sr0": ["2018-03-22-19-04-59-00"]}}, "ansible_devices": {"dm-0": {"holders": [], "host": "", "links": {"ids": ["dm-name-rhel-root", "dm-uuid-LVM-39rgFAhdd2akpJCsehjYx2Gaf5mjb3q2cKMMZHBbTMshhcvIrP5Gry7Xdef7mdNI"], "labels": [], "masters": [], "uuids": ["b59d173e-d8c1-444a-abee-e5c139a56950"]}, "model": null, "partitions": {}, "removable": "0", "rotational": "1", "sas_address": null, "sas_device_handle": null, "scheduler_mode": "", "sectors": "98549760", "sectorsize": "512", "size": "46.99 GB", "support_discard": "0", "vendor": null, "virtual": 1}, "dm-1": {"holders": [], "host": "", "links": {"ids": ["dm-name-rhel-swap", "dm-uuid-LVM-39rgFAhdd2akpJCsehjYx2Gaf5mjb3q25iJqfWVOgRPaeqNEzGUIEToAgKjWUJhS"], "labels": [], "masters": [], "uuids": ["4b1c130c-7856-437b-af0e-6e9c23ec73a0"]}, "model": null, "partitions": {}, "removable": "0", "rotational": "1", "sas_address": null, "sas_device_handle": null, "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "support_discard": "0", "vendor": null, "virtual": 1}, "sda": {"holders": [], "host": "SCSI storage controller: LSI Logic / Symbios Logic 53c1030 PCI-X Fusion-MPT Dual Ultra320 SCSI (rev 01)", "links": {"ids": [], "labels": [], "masters": [], "uuids": []}, "model": "VMware Virtual S", "partitions": {"sda1": {"holders": [], "links": {"ids": [], "labels": [], "masters": [], "uuids": ["cbd9e054-370a-4b90-aee7-0981ebfad616"]}, "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "start": "2048", "uuid": "cbd9e054-370a-4b90-aee7-0981ebfad616"}, "sda2": {"holders": ["rhel-root", "rhel-swap"], "links": {"ids": ["lvm-pv-uuid-aOrb8x-RY00-k5GZ-T1wg-QPtR-jvEb-QpKjun"], "labels": [], "masters": ["dm-0", "dm-1"], "uuids": []}, "sectors": "102758400", "sectorsize": 512, "size": "49.00 GB", "start": "2099200", "uuid": null}}, "removable": "0", "rotational": "1", "sas_address": null, "sas_device_handle": null, "scheduler_mode": "deadline", "sectors": "104857600", "sectorsize": "512", "size": "50.00 GB", "support_discard": "0", "vendor": "VMware,", "virtual": 1}, "sr0": {"holders": [], "host": "SATA controller: VMware SATA AHCI controller", "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_01000000000000000001"], "labels": ["RHEL-7.5\\x20Server.x86_64"], "masters": [], "uuids": ["2018-03-22-19-04-59-00"]}, "model": "VMware SATA CD01", "partitions": {}, "removable": "1", "rotational": "1", "sas_address": null, "sas_device_handle": null, "scheduler_mode": "deadline", "sectors": "9019392", "sectorsize": "2048", "size": "4.30 GB", "support_discard": "0", "vendor": "NECVMWar", "virtual": 1}}, "ansible_distribution": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_search_string": "Red Hat", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_major_version": "7", "ansible_distribution_release": "Maipo", "ansible_distribution_version": "7.5", "ansible_dns": {"nameservers": ["192.168.43.34", "2401:4900:1702:540e::4c"]}, "ansible_domain": "", "ansible_effective_group_id": 0, "ansible_effective_user_id": 0, "ansible_ens33": {"active": true, "device": "ens33", "features": {"busy_poll": "off [fixed]", "fcoe_mtu": "off [fixed]", "generic_receive_offload": "on", "generic_segmentation_offload": "on", "highdma": "off [fixed]", "hw_tc_offload": "off [fixed]", "l2_fwd_offload": "off [fixed]", "large_receive_offload": "off [fixed]", "loopback": "off [fixed]", "netns_local": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "rx_all": "off", "rx_checksumming": "off", "rx_fcs": "off", "rx_udp_tunnel_port_offload": "off [fixed]", "rx_vlan_filter": "on [fixed]", "rx_vlan_offload": "on", "rx_vlan_stag_filter": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "scatter_gather": "on", "tcp_segmentation_offload": "on", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "tx_checksumming": "on", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_ipip_segmentation": "off [fixed]", "tx_lockless": "off [fixed]", "tx_nocache_copy": "off", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_sit_segmentation": "off [fixed]", "tx_tcp6_segmentation": "off [fixed]", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp_segmentation": "on", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_vlan_offload": "on [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "udp_fragmentation_offload": "off [fixed]", "vlan_challenged": "off [fixed]"}, "hw_timestamp_filters": [], "ipv4": {"address": "192.168.43.46", "broadcast": "192.168.43.255", "netmask": "255.255.255.0", "network": "192.168.43.0"}, "ipv6": [{"address": "2401:4900:1702:540e:5629:b0ee:5bff:f595", "prefix": "64", "scope": "global"}, {"address": "fe80::768f:26ef:fa11:9418", "prefix": "64", "scope": "link"}], "macaddress": "00:0c:29:46:18:33", "module": "e1000", "mtu": 1500, "pciid": "0000:02:01.0", "promisc": false, "speed": 1000, "timestamping": ["tx_software", "rx_software", "software"], "type": "ether"}, "ansible_env": {"HOME": "/root", "LANG": "C", "LC_ALL": "C", "LC_NUMERIC": "C", "LESSOPEN": "||/usr/bin/lesspipe.sh %s", "LOGNAME": "root", "LS_COLORS": "rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:", "MAIL": "/var/mail/root", "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin", "PWD": "/root", "SELINUX_LEVEL_REQUESTED": "", "SELINUX_ROLE_REQUESTED": "", "SELINUX_USE_CURRENT_RANGE": "", "SHELL": "/bin/bash", "SHLVL": "2", "SSH_CLIENT": "192.168.43.99 59790 22", "SSH_CONNECTION": "192.168.43.99 59790 192.168.43.46 22", "SSH_TTY": "/dev/pts/1", "TERM": "xterm-256color", "USER": "root", "XDG_DATA_DIRS": "/root/.local/share/flatpak/exports/share/:/var/lib/flatpak/exports/share/:/usr/local/share/:/usr/share/", "XDG_RUNTIME_DIR": "/run/user/0", "XDG_SESSION_ID": "21", "XMODIFIERS": "@im=none", "_": "/usr/bin/python"}, "ansible_fibre_channel_wwn": [], "ansible_fips": false, "ansible_form_factor": "Other", "ansible_fqdn": "garima", "ansible_hostname": "garima", "ansible_hostnqn": "", "ansible_interfaces": ["lo", "virbr0", "virbr0-nic", "ens33"], "ansible_is_chroot": false, "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:f0c3e788b86", "ansible_kernel": "3.10.0-862.el7.x86_64", "ansible_lo": {"active": true, "device": "lo", "features": {"busy_poll": "off [fixed]", "fcoe_mtu": "off [fixed]", "generic_receive_offload": "on", "generic_segmentation_offload": "on", "highdma": "on [fixed]", "hw_tc_offload": "off [fixed]", "l2_fwd_offload": "off [fixed]", "large_receive_offload": "off [fixed]", "loopback": "on [fixed]", "netns_local": "on [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "rx_all": "off [fixed]", "rx_checksumming": "on [fixed]", "rx_fcs": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "rx_vlan_filter": "off [fixed]", "rx_vlan_offload": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "scatter_gather": "on", "tcp_segmentation_offload": "on", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "tx_checksumming": "on", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_ipip_segmentation": "off [fixed]", "tx_lockless": "on [fixed]", "tx_nocache_copy": "off [fixed]", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tx_sctp_segmentation": "on", "tx_sit_segmentation": "off [fixed]", "tx_tcp6_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp_segmentation": "on", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_vlan_offload": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "udp_fragmentation_offload": "on", "vlan_challenged": "on [fixed]"}, "hw_timestamp_filters": [], "ipv4": {"address": "127.0.0.1", "broadcast": "host", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "mtu": 65536, "promisc": false, "timestamping": ["rx_software", "software"], "type": "loopback"}, "ansible_local": {}, "ansible_lsb": {}, "ansible_lvm": {"lvs": {"root": {"size_g": "46.99", "vg": "rhel"}, "swap": {"size_g": "2.00", "vg": "rhel"}}, "pvs": {"/dev/sda2": {"free_g": "0.00", "size_g": "49.00", "vg": "rhel"}}, "vgs": {"rhel": {"free_g": "0.00", "num_lvs": "2", "num_pvs": "1", "size_g": "49.00"}}}, "ansible_machine": "x86_64", "ansible_machine_id": "a40db378a35a4d4e93196a97858fd41e", "ansible_memfree_mb": 220, "ansible_memory_mb": {"nocache": {"free": 757, "used": 1064}, "real": {"free": 220, "total": 1821, "used": 1601}, "swap": {"cached": 0, "free": 2047, "total": 2047, "used": 0}}, "ansible_memtotal_mb": 1821, "ansible_mounts": [{"block_available": 216215, "block_size": 4096, "block_total": 259584, "block_used": 43369, "device": "/dev/sda1", "fstype": "xfs", "inode_available": 523963, "inode_total": 524288, "inode_used": 325, "mount": "/boot", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_available": 885616640, "size_total": 1063256064, "uuid": "cbd9e054-370a-4b90-aee7-0981ebfad616"}, {"block_available": 0, "block_size": 2048, "block_total": 2254848, "block_used": 2254848, "device": "/dev/sr0", "fstype": "iso9660", "inode_available": 0, "inode_total": 0, "inode_used": 0, "mount": "/mnt/garima", "options": "ro,relatime", "size_available": 0, "size_total": 4617928704, "uuid": "2018-03-22-19-04-59-00"}, {"block_available": 11235091, "block_size": 4096, "block_total": 12312705, "block_used": 1077614, "device": "/dev/mapper/rhel-root", "fstype": "xfs", "inode_available": 24498603, "inode_total": 24637440, "inode_used": 138837, "mount": "/", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_available": 46018932736, "size_total": 50432839680, "uuid": "b59d173e-d8c1-444a-abee-e5c139a56950"}], "ansible_nodename": "garima", "ansible_os_family": "RedHat", "ansible_pkg_mgr": "yum", "ansible_proc_cmdline": {"BOOT_IMAGE": "/vmlinuz-3.10.0-862.el7.x86_64", "LANG": "en_IN.UTF-8", "crashkernel": "auto", "quiet": true, "rd.lvm.lv": ["rhel/root", "rhel/swap"], "rhgb": true, "ro": true, "root": "/dev/mapper/rhel-root"}, "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i3-5005U CPU @ 2.00GHz", "1", "GenuineIntel", "Intel(R) Core(TM) i3-5005U CPU @ 2.00GHz", "2", "GenuineIntel", "Intel(R) Core(TM) i3-5005U CPU @ 2.00GHz", "3", "GenuineIntel", "Intel(R) Core(TM) i3-5005U CPU @ 2.00GHz"], "ansible_processor_cores": 2, "ansible_processor_count": 2, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 4, "ansible_product_name": "VMware Virtual Platform", "ansible_product_serial": "VMware-56 4d 0f b7 92 af 3a 92-e4 a2 95 de 6d 46 18 33", "ansible_product_uuid": "B70F4D56-AF92-923A-E4A2-95DE6D461833", "ansible_product_version": "None", "ansible_python": {"executable": "/usr/bin/python", "has_sslcontext": true, "type": "CPython", "version": {"major": 2, "micro": 5, "minor": 7, "releaselevel": "final", "serial": 0}, "version_info": [2, 7, 5, "final", 0]}, "ansible_python_version": "2.7.5", "ansible_real_group_id": 0, "ansible_real_user_id": 0, "ansible_selinux": {"config_mode": "enforcing", "mode": "enforcing", "policyvers": 31, "status": "enabled", "type": "targeted"}, "ansible_selinux_python_present": true, "ansible_service_mgr": "systemd", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGoaJl72tUanLWrziPtrJnlSmr1yM/viNThSBu4p0k4noZL4Lqx7/cSNXcF9LHoNM/RM+A2NycEptztHdlgwBBY=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIO4uaUSWG4nUlFarIPOnh5EJLNhlY6n1ZjwPjA3VtMh+", "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABAQCvVP8xinOUZQSpWtfKWNvy5OC3guYxyxc6m4a6Eu2m4YYoLAhbMMemxrt7zpXnqtYQIQjSu1IaQB3RVZ3BrSN/qKVk7a8dD8Jvyfr1ozQEFnmNT9MIeo84p5Omravi+37fpzoT2+jZaO4QgErHI810FJSoS1qvusDKtXUt+fHpYMhOpYrSGYYtMsd5H+KRQ2RUISKL5a+47Z2vv5s8zyi/rhGx74/1rVxUTpE583yzNj7BrhbXfidxSOfsGIOAHvFWGeZMPNL4DVwmuEWAzSH6ZG5G/7m3YN0mN6NUs3a2JgFJZwbNZEr6CRhH3brw7pAYnHKwb1YCgFJjzcjj9YO5", "ansible_swapfree_mb": 2047, "ansible_swaptotal_mb": 2047, "ansible_system": "Linux", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "35", "36+ep"], "ansible_system_capabilities_enforced": "True", "ansible_system_vendor": "VMware, Inc.", "ansible_uptime_seconds": 4442, "ansible_user_dir": "/root", "ansible_user_gecos": "root", "ansible_user_gid": 0, "ansible_user_id": "root", "ansible_user_shell": "/bin/bash", "ansible_user_uid": 0, "ansible_userspace_architecture": "x86_64", "ansible_userspace_bits": "64", "ansible_virbr0": {"active": false, "device": "virbr0", "features": {"busy_poll": "off [fixed]", "fcoe_mtu": "off [fixed]", "generic_receive_offload": "on", "generic_segmentation_offload": "on", "highdma": "off [requested on]", "hw_tc_offload": "off [fixed]", "l2_fwd_offload": "off [fixed]", "large_receive_offload": "off [fixed]", "loopback": "off [fixed]", "netns_local": "on [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "rx_all": "off [fixed]", "rx_checksumming": "off [fixed]", "rx_fcs": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "rx_vlan_filter": "off [fixed]", "rx_vlan_offload": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "scatter_gather": "on", "tcp_segmentation_offload": "on", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "tx_checksumming": "on", "tx_fcoe_segmentation": "off [requested on]", "tx_gre_csum_segmentation": "on", "tx_gre_segmentation": "on", "tx_gso_partial": "on", "tx_gso_robust": "off [requested on]", "tx_ipip_segmentation": "on", "tx_lockless": "on [fixed]", "tx_nocache_copy": "off", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "on", "tx_sctp_segmentation": "off [requested on]", "tx_sit_segmentation": "on", "tx_tcp6_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp_segmentation": "on", "tx_udp_tnl_csum_segmentation": "on", "tx_udp_tnl_segmentation": "on", "tx_vlan_offload": "on", "tx_vlan_stag_hw_insert": "on", "udp_fragmentation_offload": "off [requested on]", "vlan_challenged": "off [fixed]"}, "hw_timestamp_filters": [], "id": "8000.5254008c0adf", "interfaces": ["virbr0-nic"], "ipv4": {"address": "192.168.122.1", "broadcast": "192.168.122.255", "netmask": "255.255.255.0", "network": "192.168.122.0"}, "macaddress": "52:54:00:8c:0a:df", "mtu": 1500, "promisc": false, "stp": true, "timestamping": ["rx_software", "software"], "type": "bridge"}, "ansible_virbr0_nic": {"active": false, "device": "virbr0-nic", "features": {"busy_poll": "off [fixed]", "fcoe_mtu": "off [fixed]", "generic_receive_offload": "on", "generic_segmentation_offload": "on", "highdma": "off [fixed]", "hw_tc_offload": "off [fixed]", "l2_fwd_offload": "off [fixed]", "large_receive_offload": "off [fixed]", "loopback": "off [fixed]", "netns_local": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "rx_all": "off [fixed]", "rx_checksumming": "off [fixed]", "rx_fcs": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "rx_vlan_filter": "off [fixed]", "rx_vlan_offload": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "scatter_gather": "on", "tcp_segmentation_offload": "off", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_ip_generic": "off [requested on]", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "tx_checksumming": "off", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_ipip_segmentation": "off [fixed]", "tx_lockless": "on [fixed]", "tx_nocache_copy": "off", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "on", "tx_sctp_segmentation": "off [fixed]", "tx_sit_segmentation": "off [fixed]", "tx_tcp6_segmentation": "off [requested on]", "tx_tcp_ecn_segmentation": "off [requested on]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp_segmentation": "off [requested on]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_vlan_offload": "on", "tx_vlan_stag_hw_insert": "on", "udp_fragmentation_offload": "off [requested on]", "vlan_challenged": "off [fixed]"}, "hw_timestamp_filters": [], "macaddress": "52:54:00:8c:0a:df", "mtu": 1500, "promisc": true, "timestamping": ["rx_software", "software"], "type": "ether"}, "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "discovered_interpreter_python": "/usr/bin/python", "gather_subset": ["all"], "module_setup": true}, "changed": false}
META: ran handlers

TASK [Create a directory if it does not exist] **********************************************************
task path: /root/ansible/yum.yml:4
fatal: [192.168.43.46]: FAILED! => {"changed": false, "module_stderr": "Shared connection to 192.168.43.46 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663920.06-84936519926863/AnsiballZ_file.py\", line 114, in <module>\r\n    _ansiballz_main()\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663920.06-84936519926863/AnsiballZ_file.py\", line 106, in _ansiballz_main\r\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561663920.06-84936519926863/AnsiballZ_file.py\", line 49, in invoke_module\r\n    imp.load_module('__main__', mod, module, MOD_DESC)\r\n  File \"/tmp/ansible_file_payload_v5Jrp2/__main__.py\", line 921, in <module>\r\n  File \"/tmp/ansible_file_payload_v5Jrp2/__main__.py\", line 907, in main\r\n  File \"/tmp/ansible_file_payload_v5Jrp2/__main__.py\", line 626, in ensure_directory\r\n  File \"/tmp/ansible_file_payload_v5Jrp2/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1339, in set_fs_attributes_if_different\r\n  File \"/tmp/ansible_file_payload_v5Jrp2/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1106, in set_mode_if_different\r\nOSError: [Errno 30] Read-only file system: '/mnt/garima'\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 1}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml 

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Create a directory if it does not exist] **********************************************************
fatal: [192.168.43.46]: FAILED! => {"changed": false, "module_stderr": "Shared connection to 192.168.43.46 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561664002.76-44880358524313/AnsiballZ_file.py\", line 114, in <module>\r\n    _ansiballz_main()\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561664002.76-44880358524313/AnsiballZ_file.py\", line 106, in _ansiballz_main\r\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\r\n  File \"/root/.ansible/tmp/ansible-tmp-1561664002.76-44880358524313/AnsiballZ_file.py\", line 49, in invoke_module\r\n    imp.load_module('__main__', mod, module, MOD_DESC)\r\n  File \"/tmp/ansible_file_payload_cz0Tw8/__main__.py\", line 921, in <module>\r\n  File \"/tmp/ansible_file_payload_cz0Tw8/__main__.py\", line 907, in main\r\n  File \"/tmp/ansible_file_payload_cz0Tw8/__main__.py\", line 626, in ensure_directory\r\n  File \"/tmp/ansible_file_payload_cz0Tw8/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1339, in set_fs_attributes_if_different\r\n  File \"/tmp/ansible_file_payload_cz0Tw8/ansible_file_payload.zip/ansible/module_utils/basic.py\", line 1106, in set_mode_if_different\r\nOSError: [Errno 30] Read-only file system: '/mnt/garima'\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 1}

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# ansible-playbook yum.yml --skip-tags directory
[root@himanshu ansible]# ansible-playbook yum.yml --skip-tags directory

PLAY [webserver] ****************************************************************************************

TASK [Gathering Facts] **********************************************************************************
ok: [192.168.43.46]

TASK [Mount DVD read-only] ******************************************************************************
ok: [192.168.43.46]

TASK [return motd to registered var] ********************************************************************
 [WARNING]: Consider using the mount module rather than running 'mount'.  If you need to use command
because mount is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

changed: [192.168.43.46]

TASK [Touch a file, using symbolic modes to set the permissions (equivalent to 0644)] *******************
changed: [192.168.43.46]

TASK [Enter the details into a file] ********************************************************************
changed: [192.168.43.46]

PLAY RECAP **********************************************************************************************
192.168.43.46              : ok=5    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[root@himanshu ansible]# ansible webserver -m command -a "yum repolist all"
[root@himanshu ansible]# ansible webserver -m command -a "yum repolist all"
 [WARNING]: Consider using the yum module rather than running 'yum'.  If you need to use command because
yum is insufficient you can add 'warn: false' to this command task or set 'command_warnings=False' in
ansible.cfg to get rid of this message.

192.168.43.46 | CHANGED | rc=0 >>
Loaded plugins: langpacks, product-id, search-disabled-repos, subscription-
              : manager
This system is not registered with an entitlement server. You can use subscription-manager to register.
repo id                          repo name                        status
!rhel.repo                       rhel.repo                        enabled: 5,099
repolist: 5,099Repository 'rhel.repo' is missing name in configuration, using id

[root@himanshu ansible]# ansible webserver -m command -a "yum repolist all"
 [WARNING]: Consider using the yum module rather than running 'yum'.  If you need to use command because
yum is insufficient you can add 'warn: false' to this command task or set 'command_warnings=False' in
ansible.cfg to get rid of this message.

192.168.43.46 | CHANGED | rc=0 >>
Loaded plugins: langpacks, product-id, search-disabled-repos, subscription-
              : manager
This system is not registered with an entitlement server. You can use subscription-manager to register.
repo id                          repo name                        status
rhel.repo                        rhel.repo                        enabled: 5,099
repolist: 5,099Repository 'rhel.repo' is missing name in configuration, using id

[root@himanshu ansible]# ansible-playbook yum.yml --skip-tags directory
[root@himanshu ansible]# vim yum.yml 
[root@himanshu ansible]# cat yum.yml 
---
  - hosts: webserver
    tasks:
      - name: Create a directory if it does not exist
        file:
          path: /mnt/garima
          state: directory
          mode: '0755'
        tags:
          - directory

      - name: Mount DVD read-only
        lineinfile:
          path: /etc/fstab
          line: '/dev/sr0 /mnt/garima iso9660 defaults 0 0'
      
      - name: return motd to registered var
        command: mount -a

      - name: Touch a file, using symbolic modes to set the permissions (equivalent to 0644)
        file:
          path: /etc/yum.repos.d/rhel.repo
          state: touch
          mode: u=rw,g=r,o=r
      
      - name: Enter the details into a file
        lineinfile:
          path: /etc/yum.repos.d/rhel.repo
          line: "[rhel.repo]\nbaseurl=file:///mnt/garima\ngpgcheck=0"
      
[root@himanshu ansible]# cat ansible.cfg 
[defaults]
inventory=./hosts
#ask_pass=true

[root@himanshu ansible]# cat hosts 
[webserver]
192.168.43.46

[root@himanshu ansible]# cat playbook.yml 
---
  - hosts: webserver
    tasks:
      - name: install the package of apache
        yum:
          name: httpd
          state: absent
        tags:
          - install
      
      - name: create a directory in /var/www/named as manish
        file:
          path: /var/www/virtual
          state: directory

      - name: create a file in /var/www/virtual named as index.html
        file:
          path: /var/www/virtual/index.html
          state: touch

      - name: create a file in /etc/httpd/conf.d/3.conf
        file:
          path: /etc/httpd/conf.d/3.conf
          state: touch

      - name: write something into config file.
        lineinfile:
          path: /etc/httpd/conf.d/3.conf
          line: "<virtualhost *:80>\nservername localhost\n documentroot /var/www/html\n </virtualhost>"
[root@himanshu ansible]# cat yum.yml 
---
  - hosts: webserver
    tasks:
      - name: Create a directory if it does not exist
        file:
          path: /mnt/garima
          state: directory
          mode: '0755'
        tags:
          - directory

      - name: Mount DVD read-only
        lineinfile:
          path: /etc/fstab
          line: '/dev/sr0 /mnt/garima iso9660 defaults 0 0'
      
      - name: return motd to registered var
        command: mount -a

      - name: Touch a file, using symbolic modes to set the permissions (equivalent to 0644)
        file:
          path: /etc/yum.repos.d/rhel.repo
          state: touch
          mode: u=rw,g=r,o=r
      
      - name: Enter the details into a file
        lineinfile:
          path: /etc/yum.repos.d/rhel.repo
          line: "[rhel.repo]\nbaseurl=file:///mnt/garima\ngpgcheck=0"
      
[root@himanshu ansible]# 

